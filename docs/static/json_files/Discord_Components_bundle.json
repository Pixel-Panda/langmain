{"id":"3fe269d5-a92f-4c75-9216-e40c30a05cc7","data":{"nodes":[{"id":"CustomComponent-2sZOP","type":"genericNode","position":{"x":241,"y":198.21665954589844},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Any\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\nfrom langflow.schema.dotdict import dotdict\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordAddEmojiReaction(CustomComponent):\n    display_name = \"DiscordAddEmojiReaction\"\n    description = \"react to discord message\"\n    field_order = [\"token\", \"channel_id\", \"message_id\", \"reaction\", \"message\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"message_id\": {\n                \"display_name\": \"MessageId\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": None,\n            }, \"reaction\": {\n                \"display_name\": \"EmojiReaction\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": None,\n            }, \"message\": {\n                \"display_name\": \"Message\",\n                \"advanced\": False,\n                \"required\": False,\n            }\n        }\n\n    def update_state(\n        self, name: str, value: Any\n    ):\n        print(name, value, flush=True)\n        return super().update_state(name, value)\n\n    def build(self, token: str, channel_id: int, reaction: str, message: str, message_id: Optional[int] = None) -> str:\n        import requests\n\n        body = {\"token\": token}\n        if not message_id:\n            body = {\"token\": token, \"limit\": 1}\n            resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages\", json=body)\n            if resp.status_code == 200:\n                message_id = loads(resp.content)[0][\"id\"]\n            else: raise Exception(\"Could not retrieve last message\")\n        body = {\"token\": token, \"emoji\": reaction}\n        print(\"message_id\", message_id)\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/react/{message_id}\", json=body)\n        return f\"Added reaction: {reaction}\"\n\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"message":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message","display_name":"Message","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"]},"message_id":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message_id","display_name":"MessageId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false},"reaction":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"reaction","display_name":"EmojiReaction","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":"ðŸ¤–"},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"react to discord message","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordAddEmojiReaction","documentation":"","custom_fields":{"token":null,"channel_id":null,"reaction":null,"message":null,"message_id":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","message_id","reaction","message"],"beta":false,"official":false},"id":"CustomComponent-2sZOP"},"selected":false,"width":384,"height":649},{"id":"CustomComponent-rXPA0","type":"genericNode","position":{"x":651.8837763113249,"y":199.42983553292657},"data":{"type":"CustomComponent","node":{"template":{"file":{"type":"Record","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"file","display_name":"File","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false},"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"816462295625367585"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\nfrom langflow.schema import Record\nimport subprocess\nimport sys\nimport base64\nimport re\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordAudioSender(CustomComponent):\n    display_name = \"DiscordAudioSender\"\n    description = \"Send audio file to discord channel\"\n    field_order = [\"token\", \"channel_id\", \"file\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"file\": {\n                \"display_name\": \"File\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, file: Record) -> str:\n        import requests\n        filename = re.findall(r\"(?:(?:\\/)|(?:\\\\))([a-zA-Z\\d ._]{0,40})\", file.file_path)[-1]\n\n        body = {\n            \"token\": token,\n            \"type\": file.text_key,\n            \"filename\": filename,\n            \"data\": file.data,\n            \"is_audio\": True,\n        }\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n            json=body)\n        if resp.status_code == 200:\n            return \"Sent record successfully\"\n        else:\n            if isinstance(resp.content, str):\n                raise Exception(resp.content)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"Send audio file to discord channel","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordAudioSender","documentation":"","custom_fields":{"token":null,"channel_id":null,"file":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","file"],"beta":false,"official":false},"id":"CustomComponent-rXPA0"},"selected":false,"width":384,"height":423,"positionAbsolute":{"x":651.8837763113249,"y":199.42983553292657},"dragging":false},{"id":"CustomComponent-reuJ5","type":"genericNode","position":{"x":1871.583831955025,"y":1160.6959752447415},"data":{"type":"CustomComponent","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordBotName(CustomComponent):\n    display_name = \"DiscordBotName\"\n    description = \"get discord bot name\"\n    field_order = [\"token\"]\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str) -> str:\n        import requests\n        resp = requests.post(\"http://localhost:7880/api/v1/bot_name\", json={\"token\": token})\n        if resp.status_code == 200:\n            return resp.content\n        else:\n            raise Exception(\"Timeout exception\")\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get discord bot name","base_classes":["object","str","Text"],"display_name":"DiscordBotName","documentation":"","custom_fields":{"token":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token"],"beta":false,"official":false},"id":"CustomComponent-reuJ5"},"selected":false,"width":384,"height":289,"positionAbsolute":{"x":1871.583831955025,"y":1160.6959752447415},"dragging":false},{"id":"CustomComponent-DWtvt","type":"genericNode","position":{"x":653.6041156390647,"y":640.2406079027562},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1240496339968856094"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetImage(CustomComponent):\n    display_name = \"DiscordGetImage\"\n    description = \"get the image from discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"png\", \"jpg\",\"jpeg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            print(file.keys())\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".png\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            print(tmp_file.name, type(tmp_file.name), type(file))\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"limit":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"2","fileTypes":[],"file_path":"","password":false,"name":"limit","display_name":"Limit","advanced":false,"dynamic":false,"info":"The value 0 means limitless","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get the image from discord's channel","icon":"Discord","base_classes":["Record"],"display_name":"DiscordGetImage","documentation":"","custom_fields":{"token":null,"channel_id":null,"limit":null},"output_types":["Record"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","limit"],"beta":false,"official":false},"id":"CustomComponent-DWtvt"},"selected":false,"width":384,"height":461,"positionAbsolute":{"x":653.6041156390647,"y":640.2406079027562},"dragging":false},{"id":"CustomComponent-8bN3b","type":"genericNode","position":{"x":1459.2809235265274,"y":768.4350771310235},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordMentionResponse(CustomComponent):\n    display_name = \"DiscordMentionResponse\"\n    description = \"Response channel message mention\"\n    field_order = [\"token\", \"channel_id\", \"message\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"message\": {\n                \"display_name\": \"Message\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, message: str, limit: int) -> str:\n        import requests\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/mentions/last\",\n            json={\n                \"token\": token,\n                \"limit\": limit,\n            }\n        )\n        if resp.status_code == 200:\n            msg_reference = loads(resp.content)[\"id\"]\n            resp = requests.post(\n                f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n                json={\n                    \"token\": token,\n                    \"message\": message,\n                    \"reference\": msg_reference,\n                }\n            )\n            if resp.status_code == 200:\n                return \"Sent successfully message:\" + message\n        print(\"err\", str(resp.content))","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"limit":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"limit","display_name":"Limit","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"20"},"message":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message","display_name":"Message","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"]},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"Response channel message mention","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordMentionResponse","documentation":"","custom_fields":{"token":null,"channel_id":null,"message":null,"limit":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","message","limit"],"beta":false,"official":false},"id":"CustomComponent-8bN3b"},"selected":false,"width":384,"height":555,"dragging":false,"positionAbsolute":{"x":1459.2809235265274,"y":768.4350771310235}},{"id":"CustomComponent-fxELc","type":"genericNode","position":{"x":1863.9863314227518,"y":208.13861742289055},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"The channel of guild can be used get guild users","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\nfrom json import loads\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetGuildUsers(CustomComponent):\n    display_name = \"DiscordGetGuildUsers\"\n    description = \"get the users of discord's guild\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"guild_id\": {\n                \"display_name\": \"GuildId\",\n                \"advanced\": False,\n                \"required\": False,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"info\": \"The channel of guild can be used get guild users\",\n                \"required\": False,\n            }\n        }\n\n    def build(self, token: str, guild_id: int, channel_id: int) -> str:\n        import requests\n        print(guild_id, channel_id)\n        resp = requests.post(\"http://discord:7880/api/v1/get_guild_users\", json={\"token\": token, \"guild_id\": guild_id, \"channel_id\": channel_id})\n        if resp.status_code == 200:\n            return loads(resp.content)\n        elif resp.status_code == 422:\n            raise Exception(loads(resp.content)[\"detail\"][0][\"msg\"])\n        else:\n            raise Exception(str(resp.content))\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"guild_id":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"guild_id","display_name":"GuildId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1194008837494145165"},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get the users of discord's guild","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordGetGuildUsers","documentation":"","custom_fields":{"token":null,"guild_id":null,"channel_id":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","limit"],"beta":false,"official":false},"id":"CustomComponent-fxELc"},"selected":false,"width":384,"height":461,"positionAbsolute":{"x":1863.9863314227518,"y":208.13861742289055},"dragging":false},{"id":"CustomComponent-df8E9","type":"genericNode","position":{"x":1865.6239917794783,"y":680.2200335396374},"data":{"type":"CustomComponent","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\nfrom json import loads\nfrom typing import Optional\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetGuildChannels(CustomComponent):\n    display_name = \"DiscordGetGuildChannels\"\n    description = \"get the users of discord's channels\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"guild_id\": {\n                \"display_name\": \"GuildId\",\n                \"advanced\": False,\n                \"required\": False,\n            }, \"filter\": {\n                \"display_name\": \"Type\",\n                \"info\": \"filter by type of channel\",\n                \"options\": [\n                    \"Text\",\n                    \"Category\",\n                    \"Voice\",\n                    \"\"\n                ],\n                \"required\": False,\n                \"advanced\": False,\n                \"value\": None,\n            }\n        }\n\n    def build(self, token: str, guild_id: int, filter: Optional[str] = None) -> dict:\n        import requests\n        body = {\"token\": token}\n        if filter:\n            body[\"type\"] = filter\n        resp = requests.post(f\"http://discord:7880/api/v1/guilds/{guild_id}/get_channels\", json=body)\n        if resp.status_code == 200:\n            return loads(resp.content)\n        elif resp.status_code == 422:\n            raise Exception(loads(resp.content)[\"detail\"][0][\"msg\"])\n        else:\n            raise Exception(str(resp.content))\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"filter":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"options":["Text","Category","Voice",""],"name":"filter","display_name":"Type","advanced":false,"dynamic":false,"info":"filter by type of channel","load_from_db":false,"title_case":false,"input_types":["Text"],"value":"Text"},"guild_id":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"guild_id","display_name":"GuildId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"816462295625367582"},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get the users of discord's channels","icon":"Discord","base_classes":["dict","object"],"display_name":"DiscordGetGuildChannels","documentation":"","custom_fields":{"token":null,"guild_id":null,"filter":null},"output_types":["dict"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","limit"],"beta":false,"official":false},"id":"CustomComponent-df8E9"},"selected":false,"width":384,"height":469,"positionAbsolute":{"x":1865.6239917794783,"y":680.2200335396374},"dragging":false},{"id":"CustomComponent-Kij4C","type":"genericNode","position":{"x":1054.21130838267,"y":204.3362572283126},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Any\nfrom langflow import CustomComponent\nfrom langflow.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetChannelMessages(CustomComponent):\n    display_name = \"DiscordGetChannelMessages\"\n    description = \"get the messages of discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"ogg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".ogg\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"limit":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"20","fileTypes":[],"file_path":"","password":false,"name":"limit","display_name":"Limit","advanced":false,"dynamic":false,"info":"The value 0 means limitless","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get the messages of discord's channel","icon":"Discord","base_classes":["Record"],"display_name":"DiscordGetAudioMessage","documentation":"","custom_fields":{"token":null,"channel_id":null,"limit":null},"output_types":["Record"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","limit"],"beta":false,"official":false},"id":"CustomComponent-Kij4C"},"selected":false,"width":384,"height":461,"positionAbsolute":{"x":1054.21130838267,"y":204.3362572283126},"dragging":false},{"id":"CustomComponent-fTO4f","type":"genericNode","position":{"x":1051.6662697688394,"y":677.7730698833573},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordMessageSender(CustomComponent):\n    display_name = \"DiscordMessageSender\"\n    description = \"Send a message to a discord channel\"\n    field_order = [\"token\", \"channel_id\", \"message\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"message\": {\n                \"display_name\": \"Message\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, message: str) -> str:\n        import requests\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n            json={\n                \"token\": token,\n                \"message\": message\n        })\n        if resp.status_code == 200:\n            return \"Sent successfully message:\" + message\n        else:\n            if isinstance(resp.content, str):\n                raise Exception(resp.content)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"message":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message","display_name":"Message","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"]},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"Send a message to a discord channel","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordMessageSender","documentation":"","custom_fields":{"token":null,"channel_id":null,"message":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","message"],"beta":false,"official":false},"id":"CustomComponent-fTO4f"},"selected":false,"width":384,"height":469,"positionAbsolute":{"x":1051.6662697688394,"y":677.7730698833573},"dragging":false},{"id":"CustomComponent-ExGZI","type":"genericNode","position":{"x":241.1323552170221,"y":854.3796578768713},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Any\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\nfrom langflow.schema.dotdict import dotdict\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordRemoveEmojiReaction(CustomComponent):\n    display_name = \"DiscordRemoveEmojiReaction\"\n    description = \"remove reaction from discord message\"\n    field_order = [\"token\", \"channel_id\", \"message_id\", \"reaction\", \"message\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"message_id\": {\n                \"display_name\": \"MessageId\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": None,\n            }, \"reaction\": {\n                \"display_name\": \"EmojiReaction\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": None,\n            }, \"message\": {\n                \"display_name\": \"Message\",\n                \"advanced\": False,\n                \"required\": False,\n            }\n        }\n\n    def update_state(\n        self, name: str, value: Any\n    ):\n        print(name, value, flush=True)\n        return super().update_state(name, value)\n\n    def build(self, token: str, channel_id: int, reaction: str, message: str, message_id: Optional[int] = None) -> str:\n        import requests\n\n        body = {\"token\": token}\n        if not message_id:\n            body = {\"token\": token, \"limit\": 1}\n            resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages\", json=body)\n            if resp.status_code == 200:\n                message_id = loads(resp.content)[0][\"id\"]\n            else: raise Exception(\"Could not retrieve last message\")\n        body = {\"token\": token, \"emoji\": reaction}\n        print(\"message_id\", message_id)\n        resp = requests.delete(f\"http://discord:7880/api/v1/channels/{channel_id}/react/{message_id}\", json=body)\n        return message\n\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"message":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message","display_name":"Message","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"]},"message_id":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"message_id","display_name":"MessageId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false},"reaction":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"reaction","display_name":"EmojiReaction","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":"ðŸ¤–"},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"remove reaction from discord message","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordRemoveEmojiReaction","documentation":"","custom_fields":{"token":null,"channel_id":null,"reaction":null,"message":null,"message_id":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","message_id","reaction","message"],"beta":false,"official":false},"id":"CustomComponent-ExGZI"},"selected":false,"width":384,"height":649,"positionAbsolute":{"x":241.1323552170221,"y":854.3796578768713},"dragging":false},{"id":"CustomComponent-MSree","type":"genericNode","position":{"x":1057.9728565800083,"y":1163.2632890678985},"data":{"type":"CustomComponent","node":{"template":{"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordTextMessageListener(CustomComponent):\n    display_name = \"DiscordTextMessageListener\"\n    description = \"Listen the input from a discord channel (webhook)\"\n    field_order = [\"token\", \"channel_id\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int) -> str:\n        import requests\n        resp = requests.post(\"http://discord:7880/api/v1/listen_message\", json={\"token\": token, \"channel_id\": channel_id})\n        if resp.status_code == 200:\n            return resp.content\n        else:\n            raise Exception(\"Timeout exception\")\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"Listen the input from a discord channel (webhook)","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordTextMessageListener","documentation":"","custom_fields":{"token":null,"channel_id":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id"],"beta":false,"official":false},"id":"CustomComponent-MSree"},"selected":false,"width":384,"height":375,"positionAbsolute":{"x":1057.9728565800083,"y":1163.2632890678985},"dragging":false},{"id":"CustomComponent-11JFp","type":"genericNode","position":{"x":1457.3194663071718,"y":205.31810849718778},"data":{"type":"CustomComponent","node":{"template":{"bot_name":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"bot_name","display_name":"BotName","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":"YAITEC"},"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1239303061915308164"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Any\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\n\nfrom langflow import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\nfrom langflow.schema.dotdict import dotdict\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordThreads(CustomComponent):\n    display_name = \"DiscordThreads\"\n    description = \"get the messages of discord's threads\"\n    field_order = [\"bot_name\", \"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"bot_name\": {\n                \"display_name\": \"BotName\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n    def update_state(\n        self, name: str, value: Any\n    ):\n        print(name, value, flush=True)\n        return super().update_state(name, value)\n\n    def build(self, bot_name: str, token: str, channel_id: int,  limit: int) -> str:\n        import requests\n        \n        body = {\"token\": token}\n        if channel_id:\n            body[\"channel_id\"] = channel_id\n\n        resp = requests.post(\"http://discord:7880/api/v1/listen_mention\", json=body)\n        if resp.status_code == 200:\n            user_input = loads(resp.content)\n            user_input_id, user_input_msg = user_input[\"id\"], user_input[\"content\"]\n            body = {\"token\": token, \"limit\": limit}\n            resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages\", json=body)\n\n            if resp.status_code == 200:\n                messages = loads(resp.content)[1:]\n                messages.reverse()\n                messages = str([{\"sender\": message[\"author\"][\"name\"], \"message\": message[\"message\"]} for message in messages])\n\n                return f'Chat Messages: {messages}\\n\\nChat Message Order: Down to Top\\n\\nUser Input: {user_input_msg}\\nYour name: {bot_name}'\n            else:\n                raise Exception(\"Timeout exception\")\n        else:\n            raise Exception(\"Timeout exception\")\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"limit":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"2","fileTypes":[],"file_path":"","password":false,"name":"limit","display_name":"Limit","advanced":false,"dynamic":false,"info":"The value 0 means limitless","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"get the messages of discord's threads","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordThreads","documentation":"","custom_fields":{"bot_name":null,"token":null,"channel_id":null,"limit":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["bot_name","token","channel_id","limit"],"beta":false,"official":false},"id":"CustomComponent-11JFp"},"selected":false,"width":384,"height":555,"positionAbsolute":{"x":1457.3194663071718,"y":205.31810849718778},"dragging":false},{"id":"CustomComponent-TlulG","type":"genericNode","position":{"x":651.7672450199987,"y":1117.5412272560982},"data":{"type":"CustomComponent","node":{"template":{"file":{"type":"Record","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"file","display_name":"File","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false},"channel_id":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"channel_id","display_name":"ChannelId","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"value":"1240496339968856094"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\nfrom langflow.schema import Record\nimport subprocess\nimport sys\nimport base64\nimport re\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordImageSender(CustomComponent):\n    display_name = \"DiscordImageSender\"\n    description = \"Send image to discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"file\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"file\": {\n                \"display_name\": \"File\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, file: Record) -> str:\n        import requests\n        filename = re.findall(r\"(?:(?:\\/)|(?:\\\\))([a-zA-Z\\d ._]{0,40})\", file.file_path)[-1]\n\n        body = {\n            \"token\": token,\n            \"type\": file.text_key,\n            \"filename\": filename,\n            \"data\": file.data,\n        }\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n            json=body)\n        if resp.status_code == 200:\n            return \"Sent record successfully\"\n        else:\n            if isinstance(resp.content, str):\n                raise Exception(resp.content)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"token":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"token","display_name":"Token","advanced":false,"dynamic":false,"info":"","load_from_db":false,"title_case":false,"input_types":["Text"],"value":""},"_type":"CustomComponent"},"description":"Send image to discord's channel","icon":"Discord","base_classes":["object","str","Text"],"display_name":"DiscordImageSender","documentation":"","custom_fields":{"token":null,"channel_id":null,"file":null},"output_types":["Text"],"field_formatters":{},"frozen":false,"field_order":["token","channel_id","file"],"beta":false,"official":false},"id":"CustomComponent-TlulG"},"selected":false,"width":384,"height":423,"positionAbsolute":{"x":651.7672450199987,"y":1117.5412272560982},"dragging":false}],"edges":[],"viewport":{"x":3.2192883485438415,"y":-55.818893352602686,"zoom":0.5314478371792758}},"description":"A Bundle containing Discord components for comprehensive interaction and management within Discord servers. This bundle allows you to send and retrieve messages, images, and audio, manage user interactions, and automate tasks. Components include functionality for sending text and image messages, responding to mentions, retrieving channel and guild information, managing threads, and handling emoji reactions.","name":"Discord - Components","last_tested_version":"1.0.0a36","is_component":false}